version: '3.8'

services:
  # MySQL数据库服务
  mysql:
    image: mysql:8.0
    container_name: yunzhihui-cms-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root_password}  # 从环境变量获取或使用默认值
      MYSQL_DATABASE: yunzhihui_cms
      MYSQL_USER: app_user
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-app_password}  # 从环境变量获取或使用默认值
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./server/database/init.sql:/docker-entrypoint-initdb.d/init.sql # 初始化数据库脚本
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-root_password}"]
      interval: 5s
      timeout: 5s
      retries: 10

  # 应用服务
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: yunzhihui-cms-app
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      NODE_ENV: production
      DB_HOST: mysql
      DB_USER: app_user
      DB_PASSWORD: ${MYSQL_PASSWORD:-app_password}  # 与MYSQL_PASSWORD保持一致
      DB_NAME: yunzhihui_cms
      DB_PORT: 3306
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_key}  # 从环境变量获取或使用默认值
      PORT: 5000
    ports:
      - "${APP_PORT:-80}:5000"  # 从环境变量获取或使用默认端口
    volumes:
      - ./logs:/app/logs  # 日志持久化
      - ./uploads:/app/uploads  # 上传文件持久化
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

# 持久化数据卷
volumes:
  mysql_data:
    name: yunzhihui-cms-data

# 网络配置
networks:
  app-network:
    name: yunzhihui-cms-network
    driver: bridge
